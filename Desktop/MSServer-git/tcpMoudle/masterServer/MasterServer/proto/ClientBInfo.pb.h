// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientBInfo.proto

#ifndef PROTOBUF_ClientBInfo_2eproto__INCLUDED
#define PROTOBUF_ClientBInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ClientBInfo;
class ClientBInfoDefaultTypeInternal;
extern ClientBInfoDefaultTypeInternal _ClientBInfo_default_instance_;

namespace protobuf_ClientBInfo_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ClientBInfo_2eproto

// ===================================================================

class ClientBInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientBInfo) */ {
 public:
  ClientBInfo();
  virtual ~ClientBInfo();

  ClientBInfo(const ClientBInfo& from);

  inline ClientBInfo& operator=(const ClientBInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientBInfo(ClientBInfo&& from) noexcept
    : ClientBInfo() {
    *this = ::std::move(from);
  }

  inline ClientBInfo& operator=(ClientBInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientBInfo& default_instance();

  static inline const ClientBInfo* internal_default_instance() {
    return reinterpret_cast<const ClientBInfo*>(
               &_ClientBInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClientBInfo* other);
  friend void swap(ClientBInfo& a, ClientBInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientBInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientBInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientBInfo& from);
  void MergeFrom(const ClientBInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientBInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 module = 2;
  int module_size() const;
  void clear_module();
  static const int kModuleFieldNumber = 2;
  ::google::protobuf::int32 module(int index) const;
  void set_module(int index, ::google::protobuf::int32 value);
  void add_module(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      module() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_module();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ClientBInfo)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > module_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 uid_;
  friend struct protobuf_ClientBInfo_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientBInfo

// required uint32 uid = 1;
inline bool ClientBInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientBInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientBInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientBInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ClientBInfo::uid() const {
  // @@protoc_insertion_point(field_get:ClientBInfo.uid)
  return uid_;
}
inline void ClientBInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ClientBInfo.uid)
}

// repeated int32 module = 2;
inline int ClientBInfo::module_size() const {
  return module_.size();
}
inline void ClientBInfo::clear_module() {
  module_.Clear();
}
inline ::google::protobuf::int32 ClientBInfo::module(int index) const {
  // @@protoc_insertion_point(field_get:ClientBInfo.module)
  return module_.Get(index);
}
inline void ClientBInfo::set_module(int index, ::google::protobuf::int32 value) {
  module_.Set(index, value);
  // @@protoc_insertion_point(field_set:ClientBInfo.module)
}
inline void ClientBInfo::add_module(::google::protobuf::int32 value) {
  module_.Add(value);
  // @@protoc_insertion_point(field_add:ClientBInfo.module)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientBInfo::module() const {
  // @@protoc_insertion_point(field_list:ClientBInfo.module)
  return module_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientBInfo::mutable_module() {
  // @@protoc_insertion_point(field_mutable_list:ClientBInfo.module)
  return &module_;
}

// optional string name = 3;
inline bool ClientBInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientBInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientBInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientBInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientBInfo::name() const {
  // @@protoc_insertion_point(field_get:ClientBInfo.name)
  return name_.GetNoArena();
}
inline void ClientBInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientBInfo.name)
}
#if LANG_CXX11
inline void ClientBInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientBInfo.name)
}
#endif
inline void ClientBInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientBInfo.name)
}
inline void ClientBInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientBInfo.name)
}
inline ::std::string* ClientBInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ClientBInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientBInfo::release_name() {
  // @@protoc_insertion_point(field_release:ClientBInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientBInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ClientBInfo.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientBInfo_2eproto__INCLUDED
